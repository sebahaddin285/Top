<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="top.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIQEhUQEhIVFRUVFRUVFhcVFhUYFRUXFRcWFxUXFRUY
        HSggGB0lGxcVIjEhJSkrLi4uFx8zODMuNygtLiv/2wBDAQoKCg0NDRUQDxctHR0dLS0tLS4tKy0tKy0r
        KysrLS0tLS0tKzMtLS0rLSsrLS0tLSsrLSstKzc3LSstLS0tKy3/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAAAAMEBQYHAggB/8QASRAAAgECAgUIBgcFBwMFAQAAAQIAAxEEBQYSITFB
        BxMiUWFxgZEyQlKhscEUI2JykqLRM0OCsvAIJGNzg5PCFlPhRFWj0vEV/8QAFQEBAQAAAAAAAAAAAAAA
        AAAAAAH/xAAVEQEBAAAAAAAAAAAAAAAAAAAAEf/aAAwDAQACEQMRAD8A3GEIQCEIQCEIQCEIQCEZ47M6
        VH03APsjax/hG2V7G6WVDso0dnW5F/wgxRbYjUxSL6TqO8iULM82xFMc7iWZKVrl79AAbTfV3HslDzPl
        dw6EjDYJqnU9epq37dRQSPxCBuTZtQH7weFzPgzaifWP4W/SecMXyw5i1xTTDURw1aWsw8ahb4SLqcpm
        btvxrj7q0l/lUQPUwzGmeJ/C/wCk7XGUz63mCPjPJn/Xmaf+4Yn/AHWndLlAzVdox+I8X1vc14HrZXB3
        EHuM6nnXRrlgxI1aWNIdb/t1UCoBw1wBZh2gA981zKc8NVVZKusGAKm4YMDxBMC3QkXSzNh6Sg9o/Qx7
        QxaPuO3qO+AvCEIBCEIBCEIBCEIBCEIBCEIBCEIBCEgs/wBIkw90Tp1ergva36QJTH46nQXXqMAOHWew
        DjKnmWk9Sp0aQ5tev1z48PCQVfFPWbXqMWPbw7ANwnaLIOwCTc7SZI5XhtdwOqM0WWTRqhsLSjOuX7Pe
        Zw9LL0NjWPOVbW/Z0z0VPHa+3/TmEgS4crOb/S81xLA3Wk3ML2Cl0W/PrnxlTAgcBZ2FnQWdqsBPUnWp
        Fgk6CQG+pLRoVpZUwDhGu1Bj0l23S+90+Y4yA1IqmEY9g7YHpzJswSuisrBgwBBG0EEXBEkTSmG8meev
        QrDCFtZHDOm30GXay9zA3t1jtm/YSnroGuNogIUcU6cbjqP6yRoYlX3b+o740qUCIg1K22BMQjLDYz1X
        8/1j2AQhCAQhCAQhCAQhCAQhK1pdpF9HHM0z9aw3+wDx7+rzgJ6U6SilehRN6m5mHqdg+18JS027TtJi
        CC+07THVMQFqSxygiNOTGW5cW2tugcYLCNUOwbOuWfCvTw6BWYBjuvx8BIivmQT6ujYncW3qO72j7ozQ
        XNySSd5O8wPP+caI5klSpUqYSq2s7MWRdcHWJN+hfrkBVVqZ1ailT1MCD5GeqKYilbDJVGrURaing6qw
        8mBgeVkYRZUm/wCZ8mGV4m5+jmixFtagxS3bqG6e6UzOORSunSweJSoPYrAo/gygqeG/V3wM2CRxQwpb
        sHXF80ynF4BwuLw9SmL2DEXRj9moOi3gZP6MaL4vNCDSHNUL7arD0rb+bX1u/YO3hAgDqU7AdJibADaS
        TwAG8y46OcmmPxtmrf3ans2ML1SPubk8dvZNX0P5PcLl4DKmtU41Hsznsv6o7FAlyVANgFu6BTtF+TfB
        YCzLT16lttSp0nN9+3cvcAJavogHo9HujmEBvrsvpC46x8xPhpBhdTHMRejxU2PZuPeIDKrRnWGxJXY2
        74f+I5LA9FxY+49x+Ub16FoEgDCR+Dr6p1Tu4dh/SSEAhCEAhCEAhCECPzzM1wtFqp2nco9pjuEyepWa
        q7VHN2Y3Jlg06zLnXVQeiCwHbq2BPiT7pW0YCA6SOqYjFa6yZyVEe7E7uvh2wJDLMF67bh1zrGY/nOgm
        xOJ3F/0X4xpi8YanRXZTH5u09nZOacBxTHCOaYjdI5pwHNOOacb046pwF6cdUxG9MR1TgcZlllPFUKmH
        qqGSorKwNttxsPeOB4WlU5P/AKu1HcE+rtutqXXd4S8U5Rst+qx9ZP8AFLfjs3zgX6EIQCEIQCEIQOXQ
        EWIkLpDmgwdE1KrAUwQC7EDVuQACT1k2k5IPTTJxjcDiMMQCXptq3F7OvSpnwYCBUDyg4Im30qj+MS6a
        NZwmKp6yOrhTbWVlYHxUmeTsfTDKr2tcbZ80fzqtl9dMTQcqyMCQCQrgG5RwN4IuPGB7JhGGQ5tTxuHp
        YqkbpVQMOsdantBuD3R/AIQhAJEaU5j9Hw7EGzPamne3HwFz4SXmccoObKKx1j9XhqbVH7TbWI77ao8Y
        EPpSq4enRq1GVKZQqGYgXYEkjbv2dXVKTjNNcKmxS9Q/ZWw82t8JQM6zari6rVqzFmY7LnYq7bKo4AX3
        RhAvVXlA29DDj+Kp8gssGief1cRU1HRUBGtdWO2xA1SDv3zJl3zQtBntWXtRh71MDUEjhDGyGL04DqnH
        VONaZjmnAd046pxpTjqkYDunHNONKZjqnAd05SM8HN5lre2iN5XX5S7UjKfpymriMPU6wy+RBgXOibqD
        2Cdxrlr61JT2R1AIQhAIQhAJ8afZ8MDyxpjl/M4rGUANlPEVCvYrnnFHk4HhKjVWapyvYTUzSr1VaFKp
        49OmT/8AGJl9VYGx/wBnbSP9tlrn/Ho+4VVH5Wt96bfPG+jecNgcXRxaXvSqBiB6y7nXxUkeM9i0aodV
        dTdWAYHrBFwfKB3CEIHNWoFUsdwBJ7htM868pubE4dzfpYqsb/cQ65H4ubHgZuemGI5vCVT1qFH8RAPu
        JnmTlKxetiEog7KVJb/eqdM+4p5QKhCEIH0S76HVbVKZ7Svmpt77SkCWjRmvqlW9l1Pv2+6Bs1I7o5pm
        McI3RHl5bI7QwHlMxzTMZoY4pmA+pmOaRjKmY6pmA9pmOqZjGm0dU2gPaZlZ5Q7c3Se4utUeRB+dovnW
        kNPDIzM4UAbWY2AHfMT0g5Qq+LqlaAVaSnY1RSSx3X1b9Edm/btgb1o3j0akq6wvJqedsk00akQKw5v7
        a3NI9p4p7x2zUsi0yDAByCCBY3BB7iN8C7wiGFxaVBdSDF4BCEIBAwjTG49KQuxEDHuXCkBjsM/t4eop
        /gqKR/MZjuKHSPeZpfLHpEtbF4eytalTqKW1SFJcqQoY7DYLc98zTEOGJYcTAZ1J6h5GM6+l5XRubvQv
        Qbr+r9C/8BSeX6gmzf2bMf0sZhid4pVVHcWVz70gbnCEIFT5Rqn1FNB61VfcD8yJ5c0oxHOYuu/+K4Hc
        p1V9wE9NcpNSwodhqHyCzypVcsSx4knzMDiEIQPokzkD71kMI7y5n1wtMFmY2AG8k9UDb8jxQekhvtKg
        +JAuPO8l6ZkJononXSgBWxFPWPSVAhOpfaVNTW6Q7h4mSdTK8VS3LrDrQ392+BIoY4ptIGnmZU6rrY9u
        w+UkMPj6Z4+cCXptHVNpH0qgO4xytS22A+V7bZAaVaWUsHTLu1huAHpOfZUcT8JD6ZaaUsGm06zsOhTB
        6TdRPsr2+V5jOY4+tjavPV2vwVR6Kr1KOr4wHmfZ7XzKprVDq0wehTBNh2t7R7fK0TpIFFhEUNoqrQHK
        vF8DialA3ovqjeaZ2028OHeLRkDOg0DQ9F9NjrBCSlT2GNw3+W3rd2/smo5NpMlUAMbGebWswswuJL5R
        pHVw5ActUpi3S/eoO3/uDsO3tMD04rAi42icVq6oLsbTOdHNL2dAad6gYdEqCb8PAg8Duk7Ry3EYo61U
        lF6uJHaYDnHaRFiadBSzdnzPCfMFkT1CKmIa536vqjw4+MmMDl1KgLKBFqlXqgMM6yfD4mg2FrUw9NhY
        qeHUVPqkbwRutPM2nuh1XKa+oSXoOTzVW28Der9TgWvwO8b56fdpDaS5NRx+HfC1xdHGwi2sjC+q6dRB
        /rhA8oOZoXIDiCmbBRuqUKqnuGq4Pmo85TdIslq4DEVMLWHSQ7GsbOp9F16wR5bRvE0r+zplJbE4jGEH
        Vp0xRXqLVSGNj2Kn5xA3+EIQKLylnbQ/1Pik896baOfQq/R/ZVRr0j/OnepPkRPRHKXT6NBu1x5hf090
        o2Nyynj8O2EqnVPpUn3824BAPaDuI4g9YFgwuEf5vlVXC1WoVkKup3cCODKeKngYxtA6RCTYbTwA3num
        paF6NDDLztUDnmH+2D6o+11nwkLoFkX/AKuoOsUgevcah+A8TL6hgSFDEsu4yTw2bMu/bINGi6NAswx9
        KqLVFVvvAH4xOpo7hau1NZD9ltn4WvIWm0c0qpG4kQFquimITbRqq/YbqfPaPhKxp5nuIy2ioqUxztQl
        adyCuzaWYA7QNnfeXbLc0dXW5uL8ZCcveSfScvXFILthnDn/AC3sr+R1D3AwMCq1XrOatVi7sbknf/XZ
        FlMa0XuIsDAcKYopjcNOw0BwrTu8bK071oC+tAPEdacs+wwNJ5Hdc86/qmt0RbqVdY+Ozym5c9smS8kO
        D1MNSJ3trVD/ABsSPy6s09qkBZniTPEy8TZ4HTtG7tB3iLtAp3KVocc0pIaQUYmmwFMsdUMjHpozdQ2s
        O4+1LPoTo4mU4ahg1IZyxeq4FteoR0iOwABR2KJ2zfESRRy+JUH1QT7jAm4QhArmn2G18IW4o6t79U/z
        TMlYg3E2bM8KK1KpSProw8SNnvtMYII2HeNkBbN8ooZpRFGqdSqn7Kra5Qn1WHrIeI8RtvfPk5OcXSrK
        MVT1aJJ+sV1ZagXghBvt7QLS+I9jcSdz2qauHoVPYZ0P8YUg/lIgQCIFAUAAAAADcANgA7J2pnMIDlTF
        kaNEaLo0B2jRdWjNGiytAfI0t2W6mKwzUKgDK6NTcHirAqw8iZSkaTejmN1KluBgebc6ytsFiq2EffSq
        Mm3iAei3itj4xANNT/tEZFqV6OYIOjVXmqn30F0J70JH+nMnVoDgGdgxuGnYMBwGn28QDT6GgL604qAt
        ZF3sQo72Nh8ZxrSV0QwvPY2kLbEvVb+EbPzFfOBvWiGEFKmqjcqhB3KAvylg15FZYuqgjznIDhnibPEi
        8TZ4CjPEnecM8SZ4CtI3dR2j3bZI5J0qzv1LbzP/AIkXhXsS3UD75N6NUrUy/F2J8BsHzgS8IQgEyfS7
        A8ziqg4MecXufaffeaxKfyi5cXprXUbaZs33W3HwPxgZ9JnK/raNWhxtrJ95doHjtHjIaOssxPNVA0Br
        CPc4w/N1Wt6LWde5uHgbiMoH0GKo0Rn0GA7RoqrRojRVWgPVaL0quqQRwjFWiytAs+kWVLm2XVcMba7L
        emT6tRNtM+ew9hM8smmUYowsykgg7wQbEHtvPT+jWO1SUvMo5YdEai45sThabVErAVHWmpYpUOx7qo3N
        YNfrJgZyDOg0dLkeMO7CYg/6NT/6x9R0NzNxdcBif9px8RAiQZ91pZaHJrnD7sC4+81NfczAyawvIrmz
        +kcPT+9UJ/kUwKBrTQOSjLiecxBHpMKa9ybWPnYfwywZXyCuSDiMcLestGncnsDuf+MmsRk3/wDJZaKL
        ej+7PvIY+1vv174FmptYAT7rxlhsUHUMIqakBwXnBeIa85LwFWeJs84Z4mTc264DlmtT2b2NvlLpg6PN
        01T2VA8eMrGS4fna49mkAey/D37fCW2AQhCARPEUVqKyMLqwII7DFIQMZzbANh6r0W9U7D1qdqnytGk0
        3TLIPpKc5TH1qDYPbXivf1TMoEpV+uoA+vRue9DbWHgbHzkXHWXYo0nDcNxHYd8+ZhhxTey+iekvceHg
        dkBtCEIH1TFVaIz6DAdK0WV4zVoqrQHf0jU6V7R3kOYtTq849z8hwkKW1j2CPKZtAu40oT+rz7/1Svsy
        lq8VV4FuOlPUsTfSZzuUSsB52HgTr59VPECLc6mLpmjV2348QeDL2iV4PFKdYqbiBGlamDqmk+7geDLw
        YfpwkxTrBhcR3iKSYylqNsYbVb2T+h4iVjDVmoOaVQWINiOo8PDtgThefC8QNTjwldzzTChhwQp5xxwB
        6IPa36XgWLFYtKal6jBFXezGwEqmC0tGMrPSohgqBSG9Z9YkbV9XhYb5m+kelFbFN03uAdijYq9w6+3f
        NH/s96Omoa2NqDoKyolx6Trdie4ay+IEDZdHsvNCiA3pt0m7+A8BJOEIBCEIBCEIBKDp1o9qk4qkOif2
        gHA+13HjL9OXQMCpAIIsQdxB3gwMQlU08zqrh+ZSk7KSWqEg8ANVRbcRtbfNS0t0YOHPO0gTSO8caZ6j
        1r2zD+URj9Kt1Ukt5sfiTAkst083LiKd/t09/ih+Rloy/OcPXtzdVSfZJ1X/AAtt8pjs+h4G4kT5MhwW
        fYij6FaoB1a11/C1xJzDac1x6S037wVP5dnugaGDPrtwlYyvSkVqlNCFQOSDtJ22OqL8No+EssBWnsi6
        tGoadq8B0GigeNFeKB4DoPOw8aB51rQHYefdeNQ86DwHtDElDcSB5TM9WguGqqV5x2dGUj0qYUHW6xZr
        bftHqj3E4taSNUdtVFBLE8APieyYppNnbY2u1Y3C+jTX2EG4d+8ntMCZzfTCrUGprnV9ldi/qfOVfEYt
        n3xvLLoNoXic2rc1RGqi25yqwOpTH/JupePYNsD7oBofVzbEigl1prZq1S2ymnzY2sB8gZ6wyXKqODoJ
        hqCBKdNdVR8STxJNyTxJjLRLRjD5ZhxhsOthvdz6dRuLOevs3DhJqAQhCAQhCAQhCAQhCBy6BgQQCCLE
        HcR2zFeVzkuq1P75gQX1Vs9He+qCSDT9q1z0d+615tkIHh6ohUkEEEGxBFiCN4InM9Tafcl2EzS9ZbUM
        T/3FUatT/NT1vvCx7908/wCl+g2Nytv7xSPN3stZLtSbq6XqnsaxgVmE+kT5AUpVLf18JqOimejFU9Rj
        9ag6Q9pRs1x8D1eMyqOsBjXoutRGKspuCPn1jsgbRCRWj+eJjEuLLUA6adXavWvwkrA+hp0HnEIC4edB
        42vPutAch50Kn9f1ujUEnZ/++EzvS3S01tbD0CRT3O25qnWOxfeYBpxpR9IbmKR+pU7SP3rDZf7o4Dx6
        pUI8ynKcRi6gpYei9Vz6qKTbtNtijtOybryfci9Ohq4jMdWrU3igNtJOrnD+8PZ6PfAzjk+5MsVmjLUY
        Gjhb9Kqw2uOIpKfSP2tw7d09MZFktDA0Vw2HphKaDYBvJ4sx3sx4kx8iBQAAAALADYABuAE6gEIQgEIQ
        gEIQgEIQgEIQgEIQgE4rUldSjqGVhYqwBBHUQd87hAyjTLkSwuJJq4Jvo1Q70sTQbuG9PC47JlGe8lma
        4S5bDGqo9agecH4R0/yz1dCB4fq0ypKsCpGwgixB6iDundDDO5sisx+ypJ909p4zLqNb9rSR/vKCR3E7
        pFYjQ/CPuQp9xmHuNxA8xZFo5jddaihqFj6b9EgcbJvPcRYzUaVDWGx1B461x8P62y9VeT+kfRrVB3hT
        +ka1OT5vVxA8aZ+TQKkMEfbp/iP6T79C66lMeJ/SWlOT5+NdR3IT8xHCcny8cQfBAP8AkYFP+ioN9YeC
        k/OH1C+23iAPd+sv2G0Gwq+kXfvYAeSgSXwmR4altSggI4kXPmbmBQMnw9dyDh8NYe2Rb87fKWOloTRr
        dLF0qLniBTQ+bkXMtsIDTLcroYZOboUadJfZpqFHjbfHcIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQC
        EIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQCEIQP/9k=
</value>
  </data>
  <metadata name="timer_sure.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>